/*
 * clZoomDialog.java
 *
 * Created on 8. September 2003, 23:03
 */

package Fachwerk.gui;

import java.awt.geom.*;
import java.util.*;
import Fachwerk.statik.*;

/**
 * Fachwerk - treillis
 *
 * Copyright (c) 2003 - 2008 A.Vontobel <qwert2003@users.sourceforge.net>
 *                                      <qwert2003@users.berlios.de>
 *
 * Das Programm enthält bestimmt noch FEHLER. Sämtliche Resultate sind
 * SORGFÄLTIG auf ihre PLAUSIBILITäT zu prüfen!
 *
 * Dieses einfache Fachwerkprogramm verwendet ausschliesslich die
 * Gleichgewichtsbedingungen zur Bestimmung der Stabkräfte.
 * Bei statisch unbestimmten Systemen können die überzähligen Stabkräfte
 * zugewiesen werden.
 * Das Programm bezweckt, die Anwendung des unteren (statischen)
 * Grenzwertsatzes der Plastizitätstheorie zu erleichtern.
 *
 * -------------------------------------------------------------
 *
 * Dieses Programm ist freie Software. Sie können es unter den Bedingungen
 * der GNU General Public License, Version 2, wie von der Free Software
 * Foundation herausgegeben, weitergeben und/oder modifizieren.
 *
 * Die Veröffentlichung dieses Programms erfolgt in der Hoffnung, dass es
 * Ihnen von Nutzen sein wird, aber OHNE JEDE GEWÄHRLEISTUNG - sogar ohne
 * die implizite Gewährleistung der MARKTREIFE oder der EIGNUNG FüR EINEN
 * BESTIMMTEN ZWECK.  Details finden Sie in der GNU General Public License.
 *
 * Sie sollten eine Kopie der GNU General Public License zusammen  mit
 * diesem Programm erhalten haben. Falls nicht, schreiben Sie an die
 * Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA. 
 */
public class clZoomDialog extends javax.swing.JDialog {
    
    private Point2D pkt1 = new Point2D.Double();
    private Point2D pkt2 = new Point2D.Double();
    boolean OK = false;
    ResourceBundle dialogRB;
    Locale locale;
    
    /** Creates new form clZoomDialog */
    public clZoomDialog(java.awt.Frame parent, Locale lc) {
        super(parent, "Zoom xy", true);
        initComponents();
        locale = lc;
        übersetzen();
        tastenbelegen();
        pack();
        zentriere(parent);
        show();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        feldz0 = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        feldx0 = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        feldx1 = new javax.swing.JTextField();
        jPanel7 = new javax.swing.JPanel();
        feldz1 = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        knopfOK = new javax.swing.JButton();
        knopfAbbrechen = new javax.swing.JButton();

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setPreferredSize(new java.awt.Dimension(100, 100));
        jPanel1.add(jPanel3, java.awt.BorderLayout.CENTER);

        jPanel4.setBackground(new java.awt.Color(0, 0, 0));

        feldz0.setColumns(6);
        feldz0.setToolTipText("kleinster z-Wert");
        feldz0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                feldz0ActionPerformed(evt);
            }
        });
        jPanel4.add(feldz0);

        jPanel1.add(jPanel4, java.awt.BorderLayout.NORTH);

        jPanel5.setBackground(new java.awt.Color(0, 0, 0));
        jPanel5.setLayout(new java.awt.GridBagLayout());

        feldx0.setColumns(6);
        feldx0.setToolTipText("kleinster x-Wert");
        feldx0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                feldx0ActionPerformed(evt);
            }
        });
        jPanel5.add(feldx0, new java.awt.GridBagConstraints());

        jPanel1.add(jPanel5, java.awt.BorderLayout.WEST);

        jPanel6.setBackground(new java.awt.Color(0, 0, 0));
        jPanel6.setLayout(new java.awt.GridBagLayout());

        feldx1.setColumns(6);
        feldx1.setToolTipText("grösster x-Wert");
        feldx1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                feldx1ActionPerformed(evt);
            }
        });
        jPanel6.add(feldx1, new java.awt.GridBagConstraints());

        jPanel1.add(jPanel6, java.awt.BorderLayout.EAST);

        jPanel7.setBackground(new java.awt.Color(0, 0, 0));

        feldz1.setColumns(6);
        feldz1.setToolTipText("grösster z-Wert");
        feldz1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                feldz1ActionPerformed(evt);
            }
        });
        jPanel7.add(feldz1);

        jPanel1.add(jPanel7, java.awt.BorderLayout.SOUTH);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        knopfOK.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Fachwerk/gui/icons/button_ok.png"))); // NOI18N
        knopfOK.setText("OK !");
        knopfOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                knopfOKActionPerformed(evt);
            }
        });
        jPanel2.add(knopfOK);

        knopfAbbrechen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Fachwerk/gui/icons/button_cancel.png"))); // NOI18N
        knopfAbbrechen.setText("Abbruch");
        knopfAbbrechen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                knopfAbbrechenActionPerformed(evt);
            }
        });
        jPanel2.add(knopfAbbrechen);

        getContentPane().add(jPanel2, java.awt.BorderLayout.SOUTH);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void knopfAbbrechenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_knopfAbbrechenActionPerformed
        setVisible(false);
        OK = false;
    }//GEN-LAST:event_knopfAbbrechenActionPerformed

    private void knopfOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_knopfOKActionPerformed
        okdurchEnteroderKnopf();
    }//GEN-LAST:event_knopfOKActionPerformed
    
    /** Closes the dialog */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
    setVisible(false);
    }//GEN-LAST:event_closeDialog

private void feldz0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_feldz0ActionPerformed
    feldx0.requestFocus();
}//GEN-LAST:event_feldz0ActionPerformed

private void feldx0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_feldx0ActionPerformed
    feldx1.requestFocus();
}//GEN-LAST:event_feldx0ActionPerformed

private void feldx1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_feldx1ActionPerformed
    feldz1.requestFocus();
}//GEN-LAST:event_feldx1ActionPerformed

private void feldz1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_feldz1ActionPerformed
    okdurchEnteroderKnopf();
}//GEN-LAST:event_feldz1ActionPerformed
    
private void okdurchEnteroderKnopf() {
        OK = true;
        
        double x0 = Fkt.holZahl(feldx0.getText());
        double x1 = Fkt.holZahl(feldx1.getText());
        double z0 = Fkt.holZahl(feldz0.getText());
        double z1 = Fkt.holZahl(feldz1.getText());
        
        pkt1.setLocation(x0,  z0);
        pkt2.setLocation(x1,  z1);
           
        setVisible(false);    
}   


private void übersetzen() {
        
        dialogRB = ResourceBundle.getBundle("Fachwerk/locales/gui-dialoge", locale);
        if (dialogRB == null) {
            System.err.println("FEHLER: gui-dialoge für " + locale.toString());
        }
        this.setTitle(tr("titel-Zoomxz"));
        knopfOK.setText(tr("OK"));        
        knopfAbbrechen.setText(tr("Abbruch"));
        feldx0.setToolTipText(tr("ttipx0"));
        feldx1.setToolTipText(tr("ttipx1"));
        feldz0.setToolTipText(tr("ttipz0"));
        feldz1.setToolTipText(tr("ttipz1"));
    }
    
    public Point2D[] get() {
        Point2D[] punkte = new Point2D[2];
        punkte[0] = pkt1;
        punkte[1] = pkt2;
        return punkte;
    }
    
    private void tastenbelegen() {
        javax.swing.ActionMap am = getRootPane().getActionMap();
        javax.swing.InputMap im = getRootPane().getInputMap(javax.swing.JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);
        
        // ESC - Taste
        Object EscapeObjekt = new Object();
        javax.swing.KeyStroke EscapeStroke = javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_ESCAPE, 0);
        javax.swing.Action EscapeAction = new javax.swing.AbstractAction() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OK = false;
                setVisible(false);
            }
        };
        im.put(EscapeStroke, EscapeObjekt);
        am.put(EscapeObjekt, EscapeAction);
    }
   
    private void zentriere(java.awt.Frame hf) {
        java.awt.Point OL = hf.getLocationOnScreen();
        OL.translate(hf.getWidth()/2, 10);
        OL.translate(-this.getWidth()/2, 0);
        if (OL.getX() < 0) OL.setLocation(0, OL.getY());
        if (OL.getY() < 0) OL.setLocation(OL.getX(), 0);
        this.setLocation(OL);
    }
    
    private String tr(String key) {        
        String übersetzt;
        try {übersetzt = dialogRB.getString(key);}
        catch (MissingResourceException e) {
            System.err.println("Schluesselwort " + key + " nicht gefunden fuer " + locale.toString() + " ; " + e.toString());
            return key;
        }        
        return übersetzt;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField feldx0;
    private javax.swing.JTextField feldx1;
    private javax.swing.JTextField feldz0;
    private javax.swing.JTextField feldz1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JButton knopfAbbrechen;
    private javax.swing.JButton knopfOK;
    // End of variables declaration//GEN-END:variables
    
}
