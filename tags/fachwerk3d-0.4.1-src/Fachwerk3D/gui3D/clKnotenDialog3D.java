/*
 * clKnotenDialog.java
 *
 * Created on 10. September 2003, 18:57
 */

package Fachwerk3D.gui3D;

import Fachwerk3D.statik3D.*;
import Fachwerk.statik.Fkt;
import java.util.*;

/**
 * Fachwerk3D - treillis3D
 *
 * Copyright (c) 2003 - 2009 A.Vontobel <qwert2003@users.sourceforge.net>
 *                                      <qwert2003@users.berlios.de>
 *
 * Das Programm könnte FEHLER enthalten. Sämtliche Resultate sind
 * SORGFÄLTIG auf ihre PLAUSIBILITäT zu prüfen!
 *
 * Dieses einfache Fachwerkprogramm verwendet ausschliesslich die
 * Gleichgewichtsbedingungen zur Bestimmung der Stabkräfte.
 * Bei statisch unbestimmten Systemen können die überzähligen Stabkräfte
 * zugewiesen werden.
 * Das Programm bezweckt, die Anwendung des unteren (statischen)
 * Grenzwertsatzes der Plastizitätstheorie zu erleichtern.
 *
 * -------------------------------------------------------------
 *
 * Dieses Programm ist freie Software. Sie können es unter den Bedingungen
 * der GNU General Public License, Version 2, wie von der Free Software
 * Foundation herausgegeben, weitergeben und/oder modifizieren.
 *
 * Die Veröffentlichung dieses Programms erfolgt in der Hoffnung, dass es
 * Ihnen von Nutzen sein wird, aber OHNE JEDE GEWÄHRLEISTUNG - sogar ohne
 * die implizite Gewährleistung der MARKTREIFE oder der EIGNUNG FüR EINEN
 * BESTIMMTEN ZWECK.  Details finden Sie in der GNU General Public License.
 *
 * Sie sollten eine Kopie der GNU General Public License zusammen  mit
 * diesem Programm erhalten haben. Falls nicht, schreiben Sie an die
 * Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA. 
 */
public class clKnotenDialog3D extends javax.swing.JDialog implements inKonstante3D {
    
    int nr;
    clKnoten3D kn;
    ResourceBundle dialogRB;
    Locale locale;
    
    boolean GEÄNDERT = false;
    /*
     // Knotenattribute
    private final int OFFEN = 0;
    private final int FERTIG = 1;
    private final int WIDERSPRUCH = 3;
    // Lagerattribute
    private final int LOS = 0;
    private final int FIX = 2;
    private final int VERSCHIEBLICH = 1;
    */
    String status, Axstr, Aystr, Azstr, xstr, ystr, zstr, Lxstr, Lystr, Lzstr, rtgxstr, rtgystr, rtgzstr, nrstr;
    double Ax, Az, x, y, z, Lx, Ly, Lz;
    int lagerbed;
    double rtgx, rtgy, rtgz;
    
    /** Creates new form clKnotenDialog */
    public clKnotenDialog3D(java.awt.Frame parent, int p_nr, clKnoten3D p_kn, Locale lc) {
        super(parent, "Knoten - Eigenschaften", true);
        nr = p_nr;
        kn = p_kn;
        
        // übersetzen
        locale = lc;
        dialogRB = ResourceBundle.getBundle("Fachwerk3D/locales3D/gui3D-dialoge", locale);
        if (dialogRB == null) {
            System.err.println("FEHLER: gui-dialoge für " + locale.toString());
        }
        
        // Knoteninfos einleisen
        
        // Nr
        nrstr = Integer.toString(nr);
        
        // Knotenstatus
        switch (kn.getKnotenstatus()) {
            case OFFEN:
                status = tr("OFFEN");
                break;
            case FERTIG:
                status = tr("FERTIG");
                break;
            case WIDERSPRUCH:
                status = tr("WIDERSPRUCH");
                break;
            default:
                assert false;
        }
        // Auflagerkräfte
        Axstr = Fkt.nf(kn.getRx(), 1);
        Aystr = Fkt.nf(kn.getRy(), 1);
        Azstr = Fkt.nf(kn.getRz(), 1);
        
        // Koord
        xstr = Double.toString(kn.getX());
        ystr = Double.toString(kn.getY());
        zstr = Double.toString(kn.getZ());
        
        // Lasten
        Lxstr = Double.toString(kn.getLx());
        Lystr = Double.toString(kn.getLy());
        Lzstr = Double.toString(kn.getLz());
        
        // Lagerbed
        lagerbed = kn.getLagerbed();
        rtgxstr = Double.toString(kn.getRrtg()[0]);
        rtgystr = Double.toString(kn.getRrtg()[1]);
        rtgzstr = Double.toString(kn.getRrtg()[2]);
        
        
        initComponents();
        tastenbelegen();
        übersetzen();
        pack(); 
        zentriere(parent);
        // Cursor setzen
        if (kn.getKnotenstatus() == OFFEN) {
            // Testen, ob der Knoten soeben neu eingeführt wurde (Annahme)
            if (kn.getX()==0 && kn.getY()==0 && kn.getZ()==0 && kn.getLx()==0 && kn.getLy()==0 && kn.getLz()==0 && kn.getLagerbed()==LOS) {
                feldX.requestFocus();
            }
            else feldLz.requestFocus();
        }
        else knopfNichtstun.requestFocus();
        setVisible(true);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        rbLOS = new javax.swing.JRadioButton();
        rbVERSCH = new javax.swing.JRadioButton();
        rbSCHINE = new javax.swing.JRadioButton();
        rbFIX = new javax.swing.JRadioButton();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        feldLx = new javax.swing.JTextField();
        feldLz = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        feldX = new javax.swing.JTextField();
        feldZ = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        feldStatus = new javax.swing.JTextField();
        feldAx = new javax.swing.JTextField();
        feldAz = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        feldAy = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        feldY = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        feldLy = new javax.swing.JTextField();
        jLabel32 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        feldRtgx = new javax.swing.JTextField();
        feldRtgy = new javax.swing.JTextField();
        feldRtgz = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lbNr = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        knopfÄndern = new javax.swing.JButton();
        knopfNichtstun = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jPanel1.setBackground(new java.awt.Color(204, 255, 255));
        jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0)));
        jLabel3.setText("Status");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 0);
        jPanel1.add(jLabel3, gridBagConstraints);

        jLabel2.setText("Lagerkraft");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        jPanel1.add(jLabel2, gridBagConstraints);

        jLabel4.setText("Ax");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        jPanel1.add(jLabel4, gridBagConstraints);

        jLabel5.setText("=");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(5, 3, 0, 3);
        jPanel1.add(jLabel5, gridBagConstraints);

        jLabel6.setText("kN");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel1.add(jLabel6, gridBagConstraints);

        jLabel7.setText("Az");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 0);
        jPanel1.add(jLabel7, gridBagConstraints);

        jLabel8.setText("=");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(0, 3, 5, 3);
        jPanel1.add(jLabel8, gridBagConstraints);

        jLabel10.setText("kN");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 5, 0);
        jPanel1.add(jLabel10, gridBagConstraints);

        jLabel9.setText("Koordinaten  ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        jPanel1.add(jLabel9, gridBagConstraints);

        jLabel11.setText("z");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 0);
        jPanel1.add(jLabel11, gridBagConstraints);

        jLabel12.setText("Lagerbed");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        jPanel1.add(jLabel12, gridBagConstraints);

        jPanel5.setLayout(new java.awt.GridLayout(0, 1));

        jPanel5.setBackground(new java.awt.Color(204, 255, 255));
        rbLOS.setBackground(new java.awt.Color(204, 255, 255));
        buttonGroup1.add(rbLOS);
        if (lagerbed == LOS) rbLOS.setSelected(true);
        rbLOS.setText("LOS");
        jPanel5.add(rbLOS);

        rbVERSCH.setBackground(new java.awt.Color(204, 255, 255));
        buttonGroup1.add(rbVERSCH);
        if (lagerbed == VERSCHIEBLICH) rbVERSCH.setSelected(true);
        rbVERSCH.setText("BLOCKIERTE RTG");
        jPanel5.add(rbVERSCH);

        rbSCHINE.setBackground(new java.awt.Color(204, 255, 255));
        buttonGroup1.add(rbSCHINE);
        if (lagerbed == SCHINENLAGER) rbSCHINE.setSelected(true);
        rbSCHINE.setText("FREIE RTG");
        jPanel5.add(rbSCHINE);

        rbFIX.setBackground(new java.awt.Color(204, 255, 255));
        buttonGroup1.add(rbFIX);
        if (lagerbed == FIX) rbFIX.setSelected(true);
        rbFIX.setText("FIX");
        jPanel5.add(rbFIX);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        jPanel1.add(jPanel5, gridBagConstraints);

        jLabel13.setText("Last");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.ipady = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        jPanel1.add(jLabel13, gridBagConstraints);

        jLabel14.setText("Lz");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 0);
        jPanel1.add(jLabel14, gridBagConstraints);

        jLabel15.setText("Lx");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        jPanel1.add(jLabel15, gridBagConstraints);

        jLabel16.setText("x");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        jPanel1.add(jLabel16, gridBagConstraints);

        feldLx.setColumns(5);
        feldLx.setText(Lxstr);
        feldLx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                feldLxActionPerformed(evt);
            }
        });
        feldLx.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                feldLxFocusGained(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        jPanel1.add(feldLx, gridBagConstraints);

        feldLz.setColumns(5);
        feldLz.setText(Lzstr);
        feldLz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                feldLzActionPerformed(evt);
            }
        });
        feldLz.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                feldLzFocusGained(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 0);
        jPanel1.add(feldLz, gridBagConstraints);

        jLabel19.setText("=");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.insets = new java.awt.Insets(5, 3, 0, 3);
        jPanel1.add(jLabel19, gridBagConstraints);

        jLabel20.setText("=");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.insets = new java.awt.Insets(0, 3, 10, 3);
        jPanel1.add(jLabel20, gridBagConstraints);

        jLabel21.setText("kN");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel1.add(jLabel21, gridBagConstraints);

        jLabel22.setText("kN");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 10, 0);
        jPanel1.add(jLabel22, gridBagConstraints);

        feldX.setColumns(6);
        feldX.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        feldX.setText(xstr);
        feldX.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                feldXActionPerformed(evt);
            }
        });
        feldX.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                feldXFocusGained(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        jPanel1.add(feldX, gridBagConstraints);

        feldZ.setColumns(6);
        feldZ.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        feldZ.setText(zstr);
        feldZ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                feldZActionPerformed(evt);
            }
        });
        feldZ.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                feldZFocusGained(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 0);
        jPanel1.add(feldZ, gridBagConstraints);

        jLabel23.setText("=");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(5, 3, 0, 3);
        jPanel1.add(jLabel23, gridBagConstraints);

        jLabel24.setText("=");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 3);
        jPanel1.add(jLabel24, gridBagConstraints);

        feldStatus.setBackground(new java.awt.Color(204, 255, 255));
        feldStatus.setColumns(11);
        feldStatus.setEditable(false);
        feldStatus.setText(status);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        jPanel1.add(feldStatus, gridBagConstraints);

        feldAx.setBackground(new java.awt.Color(204, 255, 255));
        feldAx.setColumns(5);
        feldAx.setEditable(false);
        feldAx.setText(Axstr);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        jPanel1.add(feldAx, gridBagConstraints);

        feldAz.setBackground(new java.awt.Color(204, 255, 255));
        feldAz.setColumns(5);
        feldAz.setEditable(false);
        feldAz.setText(Azstr);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 0);
        jPanel1.add(feldAz, gridBagConstraints);

        jLabel25.setText("Ay");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        jPanel1.add(jLabel25, gridBagConstraints);

        jLabel26.setText("=");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(5, 3, 0, 3);
        jPanel1.add(jLabel26, gridBagConstraints);

        feldAy.setBackground(new java.awt.Color(204, 255, 255));
        feldAy.setColumns(5);
        feldAy.setEditable(false);
        feldAy.setText(Aystr);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel1.add(feldAy, gridBagConstraints);

        jLabel27.setText("kN");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel1.add(jLabel27, gridBagConstraints);

        jLabel28.setText("y");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        jPanel1.add(jLabel28, gridBagConstraints);

        jLabel29.setText("=");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.insets = new java.awt.Insets(0, 3, 5, 3);
        jPanel1.add(jLabel29, gridBagConstraints);

        feldY.setColumns(6);
        feldY.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        feldY.setText(ystr);
        feldY.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                feldYActionPerformed(evt);
            }
        });
        feldY.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                feldYFocusGained(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        jPanel1.add(feldY, gridBagConstraints);

        jLabel30.setText("Ly");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        jPanel1.add(jLabel30, gridBagConstraints);

        jLabel31.setText("=");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 3);
        jPanel1.add(jLabel31, gridBagConstraints);

        feldLy.setColumns(5);
        feldLy.setText(Lystr);
        feldLy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                feldLyActionPerformed(evt);
            }
        });
        feldLy.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                feldLyFocusGained(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        jPanel1.add(feldLy, gridBagConstraints);

        jLabel32.setText("kN");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel1.add(jLabel32, gridBagConstraints);

        jPanel6.setLayout(new java.awt.BorderLayout());

        feldRtgx.setColumns(6);
        feldRtgx.setText(rtgxstr);
        feldRtgx.setToolTipText("dx");
        feldRtgx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                feldRtgxActionPerformed(evt);
            }
        });
        feldRtgx.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                feldRtgxFocusGained(evt);
            }
        });
        feldRtgx.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                feldRtgxKeyTyped(evt);
            }
        });

        jPanel6.add(feldRtgx, java.awt.BorderLayout.NORTH);

        feldRtgy.setColumns(6);
        feldRtgy.setText(rtgystr);
        feldRtgy.setToolTipText("dy");
        feldRtgy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                feldRtgyActionPerformed(evt);
            }
        });
        feldRtgy.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                feldRtgyFocusGained(evt);
            }
        });
        feldRtgy.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                feldRtgyKeyTyped(evt);
            }
        });

        jPanel6.add(feldRtgy, java.awt.BorderLayout.CENTER);

        feldRtgz.setColumns(6);
        feldRtgz.setText(rtgzstr);
        feldRtgz.setToolTipText("dz");
        feldRtgz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                feldRtgzActionPerformed(evt);
            }
        });
        feldRtgz.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                feldRtgzFocusGained(evt);
            }
        });
        feldRtgz.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                feldRtgzKeyTyped(evt);
            }
        });

        jPanel6.add(feldRtgz, java.awt.BorderLayout.SOUTH);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 7;
        jPanel1.add(jPanel6, gridBagConstraints);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        jLabel1.setText("Knoten Nr");
        jPanel2.add(jLabel1);

        lbNr.setFont(new java.awt.Font("Dialog", 1, 14));
        lbNr.setText(nrstr);
        jPanel2.add(lbNr);

        getContentPane().add(jPanel2, java.awt.BorderLayout.NORTH);

        knopfÄndern.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Fachwerk/gui/icons/button_ok.png")));
        knopfÄndern.setText("\u00fcbernehmen");
        knopfÄndern.setToolTipText("allf\u00e4llige \u00c4nderungen \u00fcbernehmen");
        knopfÄndern.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                knopfÄndernActionPerformed(evt);
            }
        });

        jPanel3.add(knopfÄndern);

        knopfNichtstun.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Fachwerk/gui/icons/button_cancel.png")));
        knopfNichtstun.setText("NICHTS \u00c4NDERN !");
        knopfNichtstun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                knopfNichtstunActionPerformed(evt);
            }
        });

        jPanel3.add(knopfNichtstun);

        getContentPane().add(jPanel3, java.awt.BorderLayout.SOUTH);

    }
    // </editor-fold>//GEN-END:initComponents

    private void feldRtgzActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_feldRtgzActionPerformed
        knopfÄndernActionPerformed(evt);
    }//GEN-LAST:event_feldRtgzActionPerformed
    
    private void feldRtgyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_feldRtgyActionPerformed
        feldRtgz.grabFocus();
    }//GEN-LAST:event_feldRtgyActionPerformed
    
    private void feldRtgxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_feldRtgxActionPerformed
        feldRtgy.grabFocus();
    }//GEN-LAST:event_feldRtgxActionPerformed

    private void feldLzActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_feldLzActionPerformed
        knopfÄndernActionPerformed(evt);
    }//GEN-LAST:event_feldLzActionPerformed

    private void feldLyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_feldLyActionPerformed
        feldLz.grabFocus();
    }//GEN-LAST:event_feldLyActionPerformed

    private void feldLxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_feldLxActionPerformed
        feldLy.grabFocus();
    }//GEN-LAST:event_feldLxActionPerformed

    private void feldZActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_feldZActionPerformed
        knopfÄndernActionPerformed(evt);
    }//GEN-LAST:event_feldZActionPerformed

    private void feldYActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_feldYActionPerformed
        feldZ.grabFocus();
    }//GEN-LAST:event_feldYActionPerformed

    private void feldXActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_feldXActionPerformed
        feldY.grabFocus();
    }//GEN-LAST:event_feldXActionPerformed

    private void feldLyFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_feldLyFocusGained
        feldLy.setSelectionStart(0); feldLy.setSelectionEnd(feldLy.getText().length());
    }//GEN-LAST:event_feldLyFocusGained

    private void feldRtgzFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_feldRtgzFocusGained
        feldRtgz.setSelectionStart(0); feldRtgz.setSelectionEnd(feldRtgz.getText().length());
    }//GEN-LAST:event_feldRtgzFocusGained

    private void feldRtgyFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_feldRtgyFocusGained
        feldRtgy.setSelectionStart(0); feldRtgy.setSelectionEnd(feldRtgy.getText().length());
    }//GEN-LAST:event_feldRtgyFocusGained

    private void feldRtgxFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_feldRtgxFocusGained
        feldRtgx.setSelectionStart(0); feldRtgx.setSelectionEnd(feldRtgx.getText().length());
    }//GEN-LAST:event_feldRtgxFocusGained

    private void feldYFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_feldYFocusGained
        feldY.setSelectionStart(0); feldY.setSelectionEnd(feldY.getText().length());
    }//GEN-LAST:event_feldYFocusGained

    private void feldRtgzKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_feldRtgzKeyTyped
        if (!rbSCHINE.isSelected()) rbVERSCH.setSelected(true);
    }//GEN-LAST:event_feldRtgzKeyTyped

    private void feldRtgyKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_feldRtgyKeyTyped
        if (!rbSCHINE.isSelected()) rbVERSCH.setSelected(true);
    }//GEN-LAST:event_feldRtgyKeyTyped

    private void feldRtgxKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_feldRtgxKeyTyped
        if (!rbSCHINE.isSelected()) rbVERSCH.setSelected(true);
    }//GEN-LAST:event_feldRtgxKeyTyped

    private void feldLzFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_feldLzFocusGained
        feldLz.setSelectionStart(0); feldLz.setSelectionEnd(feldLz.getText().length());
    }//GEN-LAST:event_feldLzFocusGained

    private void feldLxFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_feldLxFocusGained
        feldLx.setSelectionStart(0); feldLx.setSelectionEnd(feldLx.getText().length());
    }//GEN-LAST:event_feldLxFocusGained

    private void feldZFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_feldZFocusGained
        feldZ.setSelectionStart(0); feldZ.setSelectionEnd(feldZ.getText().length());
    }//GEN-LAST:event_feldZFocusGained

    private void feldXFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_feldXFocusGained
        feldX.setSelectionStart(0); feldX.setSelectionEnd(feldX.getText().length());
    }//GEN-LAST:event_feldXFocusGained

    private void knopfÄndernActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_knopfÄndernActionPerformed
        GEÄNDERT = true;
        if (lagerkontrolleOK()) setVisible(false);
        else {
            System.out.println("Input Error: direction 0,0,0 not allowed --> set to 0,0,1");
            feldRtgx.setText("0"); feldRtgy.setText("0"); feldRtgz.setText("1");
        }
    }//GEN-LAST:event_knopfÄndernActionPerformed

    private void knopfNichtstunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_knopfNichtstunActionPerformed
        GEÄNDERT = false;
        setVisible(false);
    }//GEN-LAST:event_knopfNichtstunActionPerformed

    private void tastenbelegen() {
        javax.swing.ActionMap am = getRootPane().getActionMap();
        javax.swing.InputMap im = getRootPane().getInputMap(javax.swing.JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);
        
        // ESC - Taste
        javax.swing.KeyStroke EscapeStroke = javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_ESCAPE, 0);
        Object EscapeObjekt = new Object();
        javax.swing.Action EscapeAction = new javax.swing.AbstractAction() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                knopfNichtstunActionPerformed(evt);
            }
        };
        im.put(EscapeStroke, EscapeObjekt);
        am.put(EscapeObjekt, EscapeAction);
    }
    
    private void übersetzen() {
        this.setTitle(tr("titel-KnDialog"));
        
        knopfÄndern.setText(tr("uebernehmen"));
        knopfÄndern.setToolTipText(tr("ttipuebernehmen"));
        knopfNichtstun.setText(tr("nichtsaendern"));
        jLabel1.setText(tr("KnotenNr"));
        jLabel3.setText(tr("Status"));
        jLabel2.setText(tr("Lagerkraft"));
        jLabel9.setText(tr("Koordinaten"));
        jLabel12.setText(tr("Lagerbed"));
        jLabel13.setText(tr("Last"));
        
        rbLOS.setText(tr("LOS"));
        rbVERSCH.setText(tr("BLOCKIERTERTG"));
        rbSCHINE.setText(tr("FREIERTG"));
        rbFIX.setText(tr("FIX"));
    }
    
    public boolean hatGeändert() {
        if (GEÄNDERT) return true;
        else return false;
    }
    
    /**
     * Liest neue Knotendaten ein. Liefert true, wenn erfolgreich
     */
    public boolean einlesen() {
        try {
            x = Fkt.holZahl(feldX.getText());
            y = Fkt.holZahl(feldY.getText());
            z = Fkt.holZahl(feldZ.getText());
            Lx = Fkt.holZahl(feldLx.getText());
            Ly = Fkt.holZahl(feldLy.getText());
            Lz = Fkt.holZahl(feldLz.getText());
            rtgx = Fkt.holZahl(feldRtgx.getText());
            rtgy = Fkt.holZahl(feldRtgy.getText());
            rtgz = Fkt.holZahl(feldRtgz.getText());
            
            int anzmarkiert = 0;
            if (rbFIX.isSelected()) {
                anzmarkiert++;
                lagerbed = FIX;
            }
            if (rbSCHINE.isSelected()) {
                anzmarkiert++;
                lagerbed = SCHINENLAGER;
            }
            if (rbVERSCH.isSelected()) {
                anzmarkiert++;
                lagerbed = VERSCHIEBLICH;
            }
            if (rbLOS.isSelected()) {
                anzmarkiert++;
                lagerbed = LOS;
            }
            if (anzmarkiert != 1) throw new IllegalArgumentException("genau eine Lagerbedingung markieren!");
        }
        catch (IllegalArgumentException e) {
            System.out.println(e.toString());
            return false;
        }
        
        kn.setNeueKoord(x, y, z);
        kn.setLast(Lx, Ly, Lz);
        
        switch (lagerbed) {
            case VERSCHIEBLICH:
            case SCHINENLAGER:
                kn.setLager(lagerbed,rtgx, rtgy, rtgz);
                break;
            case LOS:
            case FIX:
                kn.setLager(lagerbed);
                break;
            default:
                assert false;
        }
        
        return true;
    }
    
    private boolean lagerkontrolleOK() {
        try {
            rtgx = Fkt.holZahl(feldRtgx.getText());
            rtgy = Fkt.holZahl(feldRtgy.getText());
            rtgz = Fkt.holZahl(feldRtgz.getText());
            
            int anzmarkiert = 0;
            if (rbFIX.isSelected()) {
                anzmarkiert++;
                lagerbed = FIX;
            }
            if (rbSCHINE.isSelected()) {
                anzmarkiert++;
                lagerbed = SCHINENLAGER;
            }
            if (rbVERSCH.isSelected()) {
                anzmarkiert++;
                lagerbed = VERSCHIEBLICH;
            }
            if (rbLOS.isSelected()) {
                anzmarkiert++;
                lagerbed = LOS;
            }
            if (anzmarkiert != 1) throw new IllegalArgumentException("genau eine Lagerbedingung markieren!");
        }
        catch (IllegalArgumentException e) {
            System.out.println(e.toString());
            return false;
        }
        
        switch (lagerbed) {
            case LOS:                   // Lagerrichtung spielt keine Rolle
            case FIX:
                break;
            case VERSCHIEBLICH:         // Kontrollieren, ob nicht 0,0,0 eingegeben
            case SCHINENLAGER:
                if (rtgx*rtgx + rtgy*rtgy + rtgz*rtgz <= 0) return false;
                break;
            default:
                assert false;
        }
        return true;
    }
    
    private void zentriere(java.awt.Frame hf) {
        java.awt.Point OL = hf.getLocationOnScreen();
        OL.translate(hf.getWidth()/2, 10);
        OL.translate(-this.getWidth()/2, 0);
        if (OL.getX() < 0) OL.setLocation(0, OL.getY());
        if (OL.getY() < 0) OL.setLocation(OL.getX(), 0);
        this.setLocation(OL);
    }
    
    private String tr(String key) {
        String übersetzt;
        try {übersetzt = dialogRB.getString(key);}
        catch (MissingResourceException e) {
            System.err.println("Schluesselwort + " + key + " nicht gefunden fuer " + locale.toString() + " ; " + e.toString());
            return key;
        }
        return übersetzt;
    }

       
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JTextField feldAx;
    private javax.swing.JTextField feldAy;
    private javax.swing.JTextField feldAz;
    private javax.swing.JTextField feldLx;
    private javax.swing.JTextField feldLy;
    private javax.swing.JTextField feldLz;
    private javax.swing.JTextField feldRtgx;
    private javax.swing.JTextField feldRtgy;
    private javax.swing.JTextField feldRtgz;
    private javax.swing.JTextField feldStatus;
    private javax.swing.JTextField feldX;
    private javax.swing.JTextField feldY;
    private javax.swing.JTextField feldZ;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JButton knopfNichtstun;
    private javax.swing.JButton knopfÄndern;
    private javax.swing.JLabel lbNr;
    private javax.swing.JRadioButton rbFIX;
    private javax.swing.JRadioButton rbLOS;
    private javax.swing.JRadioButton rbSCHINE;
    private javax.swing.JRadioButton rbVERSCH;
    // End of variables declaration//GEN-END:variables
    
}
