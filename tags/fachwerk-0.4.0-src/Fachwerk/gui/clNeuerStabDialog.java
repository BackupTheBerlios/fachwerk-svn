/*
 * clNeuerStabDialog.java
 *
 * Created on 11. September 2003, 23:34
 */

package Fachwerk.gui;

import Fachwerk.statik.Fkt;
import java.util.*;

/**
 * Fachwerk - treillis
 *
 * Copyright (c) 2003 - 2009 A.Vontobel <qwert2003@users.sourceforge.net>
 *                                      <qwert2003@users.berlios.de>
 *
 * Das Programm könnte FEHLER enthalten. Sämtliche Resultate sind
 * SORGFÄLTIG auf ihre PLAUSIBILITäT zu prüfen!
 *
 * Dieses einfache Fachwerkprogramm verwendet ausschliesslich die
 * Gleichgewichtsbedingungen zur Bestimmung der Stabkräfte.
 * Bei statisch unbestimmten Systemen können die überzähligen Stabkräfte
 * zugewiesen werden.
 * Das Programm bezweckt, die Anwendung des unteren (statischen)
 * Grenzwertsatzes der Plastizitätstheorie zu erleichtern.
 *
 * -------------------------------------------------------------
 *
 * Dieses Programm ist freie Software. Sie können es unter den Bedingungen
 * der GNU General Public License, Version 2, wie von der Free Software
 * Foundation herausgegeben, weitergeben und/oder modifizieren.
 *
 * Die Veröffentlichung dieses Programms erfolgt in der Hoffnung, dass es
 * Ihnen von Nutzen sein wird, aber OHNE JEDE GEWÄHRLEISTUNG - sogar ohne
 * die implizite Gewährleistung der MARKTREIFE oder der EIGNUNG FüR EINEN
 * BESTIMMTEN ZWECK.  Details finden Sie in der GNU General Public License.
 *
 * Sie sollten eine Kopie der GNU General Public License zusammen  mit
 * diesem Programm erhalten haben. Falls nicht, schreiben Sie an die
 * Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA.
 */
public class clNeuerStabDialog extends javax.swing.JDialog {
    
    int vonkn, biskn;
    ResourceBundle dialogRB;
    Locale locale;
    
    boolean OK = false;
    
    /** Creates new form clNeuerStabDialog */
    public clNeuerStabDialog(java.awt.Frame parent, Locale lc) {
        super(parent, "neuer Stab", true);
        initComponents();
        
        // übersetzen
        locale = lc;
        dialogRB = ResourceBundle.getBundle("Fachwerk/locales/gui-dialoge", locale);
        if (dialogRB == null) {
            System.err.println("FEHLER: gui-dialoge für " + locale.toString());
        }
        übersetzen();
        tastenbelegen();
        pack();
        zentriere(parent);
        setVisible(true);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        feldVon = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        feldBis = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        btAbbruch = new javax.swing.JButton();
        btOK = new javax.swing.JButton();

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        jLabel2.setText("von");
        jPanel1.add(jLabel2);

        feldVon.setColumns(4);
        feldVon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                feldVonActionPerformed(evt);
            }
        });

        jPanel1.add(feldVon);

        jLabel3.setText("bis");
        jPanel1.add(jLabel3);

        feldBis.setColumns(4);
        feldBis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                feldBisActionPerformed(evt);
            }
        });

        jPanel1.add(feldBis);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        jLabel1.setText("Einen neuen Stab einf\u00fcgen.");
        jPanel2.add(jLabel1);

        getContentPane().add(jPanel2, java.awt.BorderLayout.NORTH);

        btAbbruch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Fachwerk/gui/icons/button_cancel.png")));
        btAbbruch.setText("Abbruch");
        btAbbruch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAbbruchActionPerformed(evt);
            }
        });

        jPanel3.add(btAbbruch);

        btOK.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Fachwerk/gui/icons/button_ok.png")));
        btOK.setText("STAB EINF\u00dcGEN");
        btOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btOKActionPerformed(evt);
            }
        });

        jPanel3.add(btOK);

        getContentPane().add(jPanel3, java.awt.BorderLayout.SOUTH);

        pack();
    }//GEN-END:initComponents

    private void feldBisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_feldBisActionPerformed
        okdurchEnteroderKnopf();
    }//GEN-LAST:event_feldBisActionPerformed

    private void feldVonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_feldVonActionPerformed
        //okdurchEnter();
        feldBis.requestFocus();
    }//GEN-LAST:event_feldVonActionPerformed

    private void btAbbruchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAbbruchActionPerformed
        OK = false;
        setVisible(false);
    }//GEN-LAST:event_btAbbruchActionPerformed

    private void btOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btOKActionPerformed
        okdurchEnteroderKnopf();
    }//GEN-LAST:event_btOKActionPerformed
    
    /** Closes the dialog */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        setVisible(false);
    }//GEN-LAST:event_closeDialog
    
    private void übersetzen() {
        this.setTitle(tr("titel-NeuerStDialog"));
        
        btOK.setText(tr("OK"));
        btAbbruch.setText(tr("Abbruch"));
        jLabel1.setText(tr("neuenStabeinf"));
        jLabel2.setText(tr("von"));
        jLabel3.setText(tr("bis"));
    }
    
    private void okdurchEnteroderKnopf() {
        try {
            vonkn = Fkt.holInt(feldVon.getText());
            biskn = Fkt.holInt(feldBis.getText());
        }
        catch (IllegalArgumentException e) {
            return;
        }
        
        if (vonkn > 0 && biskn > 0) {
            OK = true;
            setVisible(false);
        }
        
        
    }
    
    public boolean getOK() {
        // testet nur, ob die Eingabe formal korrekt ist. Der eigentliche Test erfolgt in treillis.befehlErstelleNeuenStab
        if (OK) {
            try {
                vonkn = Fkt.holInt(feldVon.getText());
                biskn = Fkt.holInt(feldBis.getText());
                
                if (vonkn < 1 || biskn < 1) {
                    String meldung = "von: " + feldVon.getText() + "   bis " + feldBis.getText();
                    throw new IllegalArgumentException(meldung);
                }
            }
            catch (IllegalArgumentException e) {
                System.out.println(e.toString());
                return false;
            }
            return true;
        }
        else return false;
    }
    
    /**
     * Liest neue Knotendaten ein.
     */
    public int[] einlesen() {
        int[] vonbis = new int[2];
        vonbis[0] = vonkn;
        vonbis[1] = biskn;
        return vonbis;
    }
    
    private void tastenbelegen() {
        javax.swing.ActionMap am = getRootPane().getActionMap();
        javax.swing.InputMap im = getRootPane().getInputMap(javax.swing.JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);
        
        // ESC - Taste
        Object EscapeObjekt = new Object();
        javax.swing.KeyStroke EscapeStroke = javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_ESCAPE, 0);
        javax.swing.Action EscapeAction = new javax.swing.AbstractAction() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OK = false;
                setVisible(false);
            }
        };
        im.put(EscapeStroke, EscapeObjekt);
        am.put(EscapeObjekt, EscapeAction);
    }
    
    private void zentriere(java.awt.Frame hf) {
        java.awt.Point OL = hf.getLocationOnScreen();
        OL.translate(hf.getWidth()/2, 10);
        OL.translate(-this.getWidth()/2, 0);
        if (OL.getX() < 0) OL.setLocation(0, OL.getY());
        if (OL.getY() < 0) OL.setLocation(OL.getX(), 0);
        this.setLocation(OL);
    }
    
    private String tr(String key) {
        String übersetzt;
        try {übersetzt = dialogRB.getString(key);}
        catch (MissingResourceException e) {
            System.err.println("Schluesselwort + " + key + " nicht gefunden fuer " + locale.toString() + " ; " + e.toString());
            return key;
        }
        return übersetzt;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAbbruch;
    private javax.swing.JButton btOK;
    private javax.swing.JTextField feldBis;
    private javax.swing.JTextField feldVon;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    // End of variables declaration//GEN-END:variables
    
}
