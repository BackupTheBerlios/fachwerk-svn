/*
 * clOK.java
 *
 * Created on 8. September 2003, 21:06
 */

package Fachwerk.gui;
import java.util.*;

/**
 * Fachwerk - treillis
 *
 * Copyright (c) 2003 - 2009 A.Vontobel <qwert2003@users.sourceforge.net>
 *                                      <qwert2003@users.berlios.de>
 *
 * Das Programm könnte FEHLER enthalten. Sämtliche Resultate sind
 * SORGFÄLTIG auf ihre PLAUSIBILITäT zu prüfen!
 *
 * Dieses einfache Fachwerkprogramm verwendet ausschliesslich die
 * Gleichgewichtsbedingungen zur Bestimmung der Stabkräfte.
 * Bei statisch unbestimmten Systemen können die überzähligen Stabkräfte
 * zugewiesen werden.
 * Das Programm bezweckt, die Anwendung des unteren (statischen)
 * Grenzwertsatzes der Plastizitätstheorie zu erleichtern.
 *
 * -------------------------------------------------------------
 *
 * Dieses Programm ist freie Software. Sie können es unter den Bedingungen
 * der GNU General Public License, Version 2, wie von der Free Software
 * Foundation herausgegeben, weitergeben und/oder modifizieren.
 *
 * Die Veröffentlichung dieses Programms erfolgt in der Hoffnung, dass es
 * Ihnen von Nutzen sein wird, aber OHNE JEDE GEWÄHRLEISTUNG - sogar ohne
 * die implizite Gewährleistung der MARKTREIFE oder der EIGNUNG FüR EINEN
 * BESTIMMTEN ZWECK.  Details finden Sie in der GNU General Public License.
 *
 * Sie sollten eine Kopie der GNU General Public License zusammen  mit
 * diesem Programm erhalten haben. Falls nicht, schreiben Sie an die
 * Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA. 
 */
public class clOK extends javax.swing.JDialog {
    
    private String text;
    private boolean antwort = false;
    ResourceBundle dialogRB;
    Locale locale;
    
    /** Creates new form testDialog */
    public clOK(java.awt.Frame parent, String titel, String fragetext, Locale lc) {
        super(parent, titel, true); // Dialog immer modal
        text = fragetext;
        initComponents();
        // übersetzen
        locale = lc;
        dialogRB = ResourceBundle.getBundle("Fachwerk/locales/gui-dialoge", locale);
        if (dialogRB == null) {
            System.err.println("FEHLER: gui-dialoge für " + locale.toString());
        }
        knopfOK.setText(tr("OK"));
        knopfAbbrechen.setText(tr("zurueck"));
        infoFeld.setColumns((int)(fragetext.length()/1.45));
        tastenbelegen();
        pack();
        zentriere(parent);
        setVisible(true);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        infoFeld = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        knopfOK = new javax.swing.JButton();
        knopfAbbrechen = new javax.swing.JButton();

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        infoFeld.setEditable(false);
        infoFeld.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        infoFeld.setText(text);
        infoFeld.setPreferredSize(new java.awt.Dimension(200, 50));
        getContentPane().add(infoFeld, java.awt.BorderLayout.CENTER);

        knopfOK.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Fachwerk/gui/icons/button_ok.png")));
        knopfOK.setText("OK !");
        knopfOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                knopfOKActionPerformed(evt);
            }
        });

        jPanel1.add(knopfOK);

        knopfAbbrechen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Fachwerk/gui/icons/button_cancel.png")));
        knopfAbbrechen.setText("Lieber unverrichteter Dinge zur\u00fcck.");
        knopfAbbrechen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                knopfAbbrechenActionPerformed(evt);
            }
        });

        jPanel1.add(knopfAbbrechen);

        getContentPane().add(jPanel1, java.awt.BorderLayout.SOUTH);

        pack();
    }//GEN-END:initComponents

    private void knopfAbbrechenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_knopfAbbrechenActionPerformed
        antwort = false;
        setVisible(false);
    }//GEN-LAST:event_knopfAbbrechenActionPerformed

    private void knopfOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_knopfOKActionPerformed
        antwort = true;
        setVisible(false);
    }//GEN-LAST:event_knopfOKActionPerformed
    
    /** Closes the dialog */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        setVisible(false);
    }//GEN-LAST:event_closeDialog
    
    /** Gibt an, ob die OK bestätigt worden ist.*/
    public boolean ok() {
        return antwort;
    }
    
    private void tastenbelegen() {
        javax.swing.ActionMap am = getRootPane().getActionMap();
        javax.swing.InputMap im = getRootPane().getInputMap(javax.swing.JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);
        
        // ESC - Taste
        Object EscapeObjekt = new Object();
        javax.swing.KeyStroke EscapeStroke = javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_ESCAPE, 0);
        javax.swing.Action EscapeAction = new javax.swing.AbstractAction() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                antwort = false;              // Befehl
                setVisible(false);
            }
        };
        im.put(EscapeStroke, EscapeObjekt);
        am.put(EscapeObjekt, EscapeAction);
        
        // ENTER - Taste
        Object EnterObjekt = new Object();
        javax.swing.KeyStroke EnterStroke = javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_ENTER, 0);
        javax.swing.Action EnterAction = new javax.swing.AbstractAction() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                antwort = true;               // Befehl
                setVisible(false);
            }
        };
        im.put(EnterStroke, EnterObjekt);
        am.put(EnterObjekt, EnterAction);
    }
    
    private void zentriere(java.awt.Frame hf) {
        java.awt.Point OL = hf.getLocationOnScreen();
        OL.translate(hf.getWidth()/2, hf.getHeight()/2);
        OL.translate(-this.getWidth()/2, -this.getHeight()/2);
        if (OL.getX() < 0) OL.setLocation(0, OL.getY());
        if (OL.getY() < 0) OL.setLocation(OL.getX(), 0);
        this.setLocation(OL);
    }
    
    private String tr(String key) {        
        String übersetzt;
        try {übersetzt = dialogRB.getString(key);}
        catch (MissingResourceException e) {
            System.err.println("Schluesselwort + " + key + " nicht gefunden fuer " + locale.toString() + " ; " + e.toString());
            return key;
        }        
        return übersetzt;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField infoFeld;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton knopfAbbrechen;
    private javax.swing.JButton knopfOK;
    // End of variables declaration//GEN-END:variables
    
}
